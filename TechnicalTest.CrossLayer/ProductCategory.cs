//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;
using System.ComponentModel.DataAnnotations;


namespace TechnicalTest.CrossLayer
{
    
    public partial class ProductCategoryDefinition {
    	
    }
    
    [MetadataType(typeof(ProductCategoryDefinition))]
    [DataContract(IsReference = true)]
    [KnownType(typeof(Product))]
    [KnownType(typeof(ProductCategory))]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class ProductCategory: EntityBase
    {
        #region Primitive Properties
    
        [DataMember]
        public int ProductCategoryID
        {
            get { return _productCategoryID; }
            set
            {
                if (_productCategoryID != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'ProductCategoryID' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _productCategoryID = value;
                    OnPropertyChanged("ProductCategoryID");
                }
            }
        }
        private int _productCategoryID;
    
        [DataMember]
        public Nullable<int> ParentProductCategoryID
        {
            get { return _parentProductCategoryID; }
            set
            {
                if (_parentProductCategoryID != value)
                {
                    ChangeTracker.RecordOriginalValue("ParentProductCategoryID", _parentProductCategoryID);
                    if (!IsDeserializing)
                    {
                        if (ProductCategory2 != null && ProductCategory2.ProductCategoryID != value)
                        {
                            ProductCategory2 = null;
                        }
                    }
                    _parentProductCategoryID = value;
                    OnPropertyChanged("ParentProductCategoryID");
                }
            }
        }
        private Nullable<int> _parentProductCategoryID;
    
        [DataMember]
        public string Name
        {
            get { return _name; }
            set
            {
                if (_name != value)
                {
                    _name = value;
                    OnPropertyChanged("Name");
                }
            }
        }
        private string _name;
    
        [DataMember]
        public System.Guid rowguid
        {
            get { return _rowguid; }
            set
            {
                if (_rowguid != value)
                {
                    _rowguid = value;
                    OnPropertyChanged("rowguid");
                }
            }
        }
        private System.Guid _rowguid;
    
        [DataMember]
        public System.DateTime ModifiedDate
        {
            get { return _modifiedDate; }
            set
            {
                if (_modifiedDate != value)
                {
                    _modifiedDate = value;
                    OnPropertyChanged("ModifiedDate");
                }
            }
        }
        private System.DateTime _modifiedDate;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<Product> Products
        {
            get
            {
                if (_products == null)
                {
                    _products = new TrackableCollection<Product>();
                    _products.CollectionChanged += FixupProducts;
                }
                return _products;
            }
            set
            {
                if (!ReferenceEquals(_products, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_products != null)
                    {
                        _products.CollectionChanged -= FixupProducts;
                    }
                    _products = value;
                    if (_products != null)
                    {
                        _products.CollectionChanged += FixupProducts;
                    }
                    OnNavigationPropertyChanged("Products");
                }
            }
        }
        private TrackableCollection<Product> _products;
    
        [DataMember]
        public TrackableCollection<ProductCategory> ProductCategory1
        {
            get
            {
                if (_productCategory1 == null)
                {
                    _productCategory1 = new TrackableCollection<ProductCategory>();
                    _productCategory1.CollectionChanged += FixupProductCategory1;
                }
                return _productCategory1;
            }
            set
            {
                if (!ReferenceEquals(_productCategory1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_productCategory1 != null)
                    {
                        _productCategory1.CollectionChanged -= FixupProductCategory1;
                    }
                    _productCategory1 = value;
                    if (_productCategory1 != null)
                    {
                        _productCategory1.CollectionChanged += FixupProductCategory1;
                    }
                    OnNavigationPropertyChanged("ProductCategory1");
                }
            }
        }
        private TrackableCollection<ProductCategory> _productCategory1;
    
        [DataMember]
        public ProductCategory ProductCategory2
        {
            get { return _productCategory2; }
            set
            {
                if (!ReferenceEquals(_productCategory2, value))
                {
                    var previousValue = _productCategory2;
                    _productCategory2 = value;
                    FixupProductCategory2(previousValue);
                    OnNavigationPropertyChanged("ProductCategory2");
                }
            }
        }
        private ProductCategory _productCategory2;

        #endregion

        #region ChangeTracking
    
    
        protected override void ClearNavigationProperties()
        {
            Products.Clear();
            ProductCategory1.Clear();
            ProductCategory2 = null;
        }

        #endregion

        #region Association Fixup
    
        private void FixupProductCategory2(ProductCategory previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.ProductCategory1.Contains(this))
            {
                previousValue.ProductCategory1.Remove(this);
            }
    
            if (ProductCategory2 != null)
            {
                if (!ProductCategory2.ProductCategory1.Contains(this))
                {
                    ProductCategory2.ProductCategory1.Add(this);
                }
    
                ParentProductCategoryID = ProductCategory2.ProductCategoryID;
            }
            else if (!skipKeys)
            {
                ParentProductCategoryID = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("ProductCategory2")
                    && (ChangeTracker.OriginalValues["ProductCategory2"] == ProductCategory2))
                {
                    ChangeTracker.OriginalValues.Remove("ProductCategory2");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("ProductCategory2", previousValue);
                }
                if (ProductCategory2 != null && !ProductCategory2.ChangeTracker.ChangeTrackingEnabled)
                {
                    ProductCategory2.StartTracking();
                }
            }
        }
    
        private void FixupProducts(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Product item in e.NewItems)
                {
                    item.ProductCategory = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Products", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Product item in e.OldItems)
                {
                    if (ReferenceEquals(item.ProductCategory, this))
                    {
                        item.ProductCategory = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Products", item);
                    }
                }
            }
        }
    
        private void FixupProductCategory1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ProductCategory item in e.NewItems)
                {
                    item.ProductCategory2 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ProductCategory1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ProductCategory item in e.OldItems)
                {
                    if (ReferenceEquals(item.ProductCategory2, this))
                    {
                        item.ProductCategory2 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ProductCategory1", item);
                    }
                }
            }
        }

        #endregion

    }
}
